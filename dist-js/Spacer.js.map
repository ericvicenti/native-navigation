{"version":3,"sources":["../lib/js/Spacer.js"],"names":["Spacer","props","context","state","height","nativeNavigationInitialBarHeight","subscription","onHeightChanged","bind","id","nativeNavigationInstanceId","key","addListener","removeSubscription","animated","easeInEaseOut","setState","Component","propTypes","bool","defaultProps","contextTypes","string","number","module","exports"],"mappings":"8fAAA,4B;AACA,yC;;;;;;AAMMA,M;AACJ,gBAAYC,KAAZ,CAAmBC,OAAnB,CAA4B;AACpBD,KADoB,CACbC,OADa;AAE1B,MAAKC,KAAL,CAAa;AACXC,OAAQF,QAAQG,gCAAR,EAA4C,CADzC,CAAb;;;AAIA,MAAKC,YAAL,CAAoB,IAApB;AACA,MAAKC,eAAL,CAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB,CAP0B;AAQ3B,C;;AAEmB;AAClB,GAAMC,IAAK,KAAKP,OAAL,CAAaQ,0BAAxB;AACA,GAAMC,kDAAmDF,EAAzD;AACA,KAAKH,YAAL,CAAoB,gCAAmBM,WAAnB,CAA+BD,GAA/B,CAAoC,KAAKJ,eAAzC,CAApB;AACD,C;;AAEsB;AACrB,gCAAmBM,kBAAnB,CAAsC,KAAKP,YAA3C;AACD,C;;AAEeF,M,CAAQ;AACtB,GAAI,KAAKH,KAAL,CAAWa,QAAf,CAAyB;AACvB,6BAAgBC,aAAhB;AACD;AACD,KAAKC,QAAL,CAAc,CAAEZ,aAAF,CAAd;AACD,C;;AAEQ;AACP,MAAO,kDAAM,MAAO,CAAEA,OAAQ,KAAKD,KAAL,CAAWC,MAArB,CAAb,EAAP;AACD,C,oBA9BkB,gBAAMa,S;;;AAiC3BjB,OAAOkB,SAAP,CAAmB;AACjBJ,SAAU,iBAAUK,IADH,CAAnB;;;AAIAnB,OAAOoB,YAAP,CAAsB;AACpBN,SAAU,KADU,CAAtB;;;AAIAd,OAAOqB,YAAP,CAAsB;AACpBX,2BAA4B,iBAAUY,MADlB;AAEpBjB,iCAAkC,iBAAUkB,MAFxB,CAAtB;;;AAKAC,OAAOC,OAAP,CAAiBzB,MAAjB","file":"Spacer.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport {\n  DeviceEventEmitter,\n  View,\n  LayoutAnimation,\n} from 'react-native';\n\nclass Spacer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      height: context.nativeNavigationInitialBarHeight || 0,\n    };\n\n    this.subscription = null;\n    this.onHeightChanged = this.onHeightChanged.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.context.nativeNavigationInstanceId;\n    const key = `NativeNavigationScreen.onBarHeightChanged.${id}`;\n    this.subscription = DeviceEventEmitter.addListener(key, this.onHeightChanged);\n  }\n\n  componentWillUnmount() {\n    DeviceEventEmitter.removeSubscription(this.subscription);\n  }\n\n  onHeightChanged(height) {\n    if (this.props.animated) {\n      LayoutAnimation.easeInEaseOut();\n    }\n    this.setState({ height });\n  }\n\n  render() {\n    return <View style={{ height: this.state.height }} />;\n  }\n}\n\nSpacer.propTypes = {\n  animated: PropTypes.bool,\n};\n\nSpacer.defaultProps = {\n  animated: false,\n};\n\nSpacer.contextTypes = {\n  nativeNavigationInstanceId: PropTypes.string,\n  nativeNavigationInitialBarHeight: PropTypes.number,\n};\n\nmodule.exports = Spacer;\n"]}