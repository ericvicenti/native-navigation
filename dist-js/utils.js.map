{"version":3,"sources":["../lib/js/utils.js"],"names":["isEventKey","key","substr","c","undefined","isNaN","toUpperCase","IS_IMAGE_REGEX","isImageKey","test","IS_COLOR_REGEX","isColorKey","processConfig","config","obj","Object","keys","forEach","resolveAssetSource","Array","isArray","map","processConfigWatchingForMutations","target","prev","next","mutationFlag","onEvent","hasMutated","result","el","module","exports"],"mappings":"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","file":"utils.js","sourcesContent":["import {\n  processColor,\n  Image,\n} from 'react-native';\nimport shallowEquals from './shallowEquals';\n\nfunction isEventKey(key) {\n  if (key.substr(0, 2) !== 'on') return false; // doesn't start with 'on';\n  const c = key[2];\n  if (c === undefined || !isNaN(c * 1)) return false; // 3rd char is numeric\n  return c === c.toUpperCase(); // only event if 3rd char is uppercase letter\n}\nconst IS_IMAGE_REGEX = /image/i;\n\nfunction isImageKey(key) {\n  return IS_IMAGE_REGEX.test(key);\n}\n\nconst IS_COLOR_REGEX = /color$/i;\n\n\nfunction isColorKey(key) {\n  return IS_COLOR_REGEX.test(key);\n}\n\nfunction processConfig(config) {\n  if (typeof config !== 'object') {\n    return config;\n  }\n  const obj = {};\n  Object.keys(config).forEach(key => {\n    if (isColorKey(key)) {\n      obj[key] = processColor(config[key]);\n    } else if (isImageKey(key)) {\n      obj[key] = Image.resolveAssetSource(config[key]);\n    } else if (isEventKey(key)) {\n      // do nothing\n    } else if (Array.isArray(config[key])) {\n      obj[key] = config[key].map(processConfig);\n    } else {\n      obj[key] = config[key];\n    }\n  });\n  return obj;\n}\n\nfunction processConfigWatchingForMutations(target, prev, next, mutationFlag, onEvent) {\n  /* eslint no-param-reassign: 0, no-unused-expressions: 0 */\n  if (typeof next !== 'object') {\n    return;\n  }\n  Object.keys(next).forEach(key => {\n    if (key === 'children') return;\n    if (isEventKey(key)) {\n      onEvent && onEvent(key);\n    } else if (prev[key] !== next[key]) {\n      if (isColorKey(key)) {\n        target[key] = processColor(next[key]);\n        mutationFlag.hasMutated = true;\n      } else if (isImageKey(key)) {\n        target[key] = Image.resolveAssetSource(next[key]);\n        mutationFlag.hasMutated = true;\n      } else if (Array.isArray(next[key])) {\n        // TODO: shallow\n        if (!shallowEquals(next[key], prev[key], shallowEquals)) {\n          processConfigWatchingForMutations(target[key]);\n          target[key] = next[key].map(el => {\n            const result = {};\n            processConfigWatchingForMutations(result, {}, el, mutationFlag, null);\n            return result;\n          });\n          mutationFlag.hasMutated = true;\n        }\n      } else {\n        target[key] = next[key];\n        mutationFlag.hasMutated = true;\n      }\n    }\n  });\n\n  // we need to also cycle through keys that were there previously but might not be\n  // anymore and treat that as a removal\n  Object.keys(prev).forEach(key => {\n    if (key in prev && !(key in next)) {\n      if (isEventKey(key)) {\n        onEvent && onEvent(key);\n      } else if (key === 'children') {\n        // do nothing\n      } else {\n        // remove from barProps\n        target[key] = undefined;\n        mutationFlag.hasMutated = true;\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  isEventKey,\n  isColorKey,\n  processConfig,\n  processConfigWatchingForMutations,\n};\n"]}