{"version":3,"sources":["../lib/js/SharedElement.js"],"names":["NativeSharedElement","component","viewName","mockComponent","children","propTypes","id","string","nativeNavigationInstanceId","numberOrString","oneOfType","number","IdPropTypes","type","isRequired","typeId","subType","subTypeId","node","defaultProps","contextTypes","SharedElement","props","getId","context","Children","only","Component","module","exports"],"mappings":"8tBAAA,4B;AACA,+D;;AAEA,GAAMA,qBAAsB,gCAAWC,SAAX,CAAqB;AAC/CC,SAAU,+BADqC;AAE/CC,cAAe,gCAAGC,SAAH,MAAGA,QAAH,OAAkBA,SAAlB,EAFgC;AAG/CC,UAAW;AACTC,GAAI,iBAAUC,MADL;AAETC,2BAA4B,iBAAUD,MAF7B,CAHoC,CAArB,CAA5B;;;;AASA,GAAME,gBAAiB,iBAAUC,SAAV,CAAoB;AACzC,iBAAUC,MAD+B;AAEzC,iBAAUJ,MAF+B,CAApB,CAAvB;;;AAKA,GAAMK,aAAc;AAClBC,KAAM,iBAAUN,MAAV,CAAiBO,UADL;AAElBC,OAAQN,cAFU;AAGlBO,QAAS,iBAAUT,MAHD;AAIlBU,UAAWR,cAJO,CAApB;;;AAOA,GAAMJ;AACDO,WADC;AAEJR,SAAU,iBAAUc,IAAV,CAAeJ,UAFrB,EAAN;;;AAKA,GAAMK,cAAe;AACnBJ,OAAQ,EADW;AAEnBC,QAAS,EAFU;AAGnBC,UAAW,EAHQ,CAArB;;;AAMA,GAAMG,cAAe;AACnBZ,2BAA4B,iBAAUD,MADnB,CAArB,C;;;AAIMc,a;AACI;AACuC,KAAKC,KAD5C,CACET,IADF,QACEA,IADF,CACQE,MADR,QACQA,MADR,CACgBC,OADhB,QACgBA,OADhB,CACyBC,SADzB,QACyBA,SADzB;AAEN,MAAUJ,KAAV,KAAkBE,MAAlB,KAA4BC,OAA5B,KAAuCC,SAAvC;AACD,C;AACQ;AACP;AACE,8BAAC,mBAAD;AACE,GAAI,KAAKM,KAAL,EADN;AAEE,2BAA4B,KAAKC,OAAL,CAAahB,0BAF3C;;AAIG,gBAAMiB,QAAN,CAAeC,IAAf,CAAoB,KAAKJ,KAAL,CAAWlB,QAA/B,CAJH,CADF;;;AAQD,C,2BAdyB,gBAAMuB,S;;;AAiBlCN,cAAchB,SAAd,CAA0BA,SAA1B;AACAgB,cAAcF,YAAd,CAA6BA,YAA7B;AACAE,cAAcD,YAAd,CAA6BA,YAA7B;AACAC,cAAcT,WAAd,CAA4BA,WAA5B;;AAEAgB,OAAOC,OAAP,CAAiBR,aAAjB","file":"SharedElement.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport SafeModule from 'react-native-safe-module';\n\nconst NativeSharedElement = SafeModule.component({\n  viewName: 'NativeNavigationSharedElement',\n  mockComponent: ({ children }) => children,\n  propTypes: {\n    id: PropTypes.string,\n    nativeNavigationInstanceId: PropTypes.string,\n  },\n});\n\nconst numberOrString = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\n\nconst IdPropTypes = {\n  type: PropTypes.string.isRequired,\n  typeId: numberOrString,\n  subType: PropTypes.string,\n  subTypeId: numberOrString,\n};\n\nconst propTypes = {\n  ...IdPropTypes,\n  children: PropTypes.node.isRequired,\n};\n\nconst defaultProps = {\n  typeId: '',\n  subType: '',\n  subTypeId: '',\n};\n\nconst contextTypes = {\n  nativeNavigationInstanceId: PropTypes.string,\n};\n\nclass SharedElement extends React.Component {\n  getId() {\n    const { type, typeId, subType, subTypeId } = this.props;\n    return `${type}|${typeId}|${subType}|${subTypeId}`;\n  }\n  render() {\n    return (\n      <NativeSharedElement\n        id={this.getId()}\n        nativeNavigationInstanceId={this.context.nativeNavigationInstanceId}\n      >\n        {React.Children.only(this.props.children)}\n      </NativeSharedElement>\n    );\n  }\n}\n\nSharedElement.propTypes = propTypes;\nSharedElement.defaultProps = defaultProps;\nSharedElement.contextTypes = contextTypes;\nSharedElement.IdPropTypes = IdPropTypes;\n\nmodule.exports = SharedElement;\n"]}